name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New release version (optional)'
        required: false
  
#  push:
#    paths-ignore:
#      - README.md  # Ignore changes to README.md
#      - .git/**
#      - .github/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored as a secret
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored as a secret

      - name: Set Branch Name
        id: set_branch_name
        run: |
          # Get the branch name from the context
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Branch name is $BRANCH_NAME" 
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        run: |
          if [ -z "${{ github.event.inputs.new_version }}" ]; then
            echo "Creating new release: ${{ github.event.inputs.new_version }}"
            echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token
            gh release create "${{ github.event.inputs.new_version }}" --target "$BRANCH_NAME"
          else
            echo "Release creation skipped."
          fi

      - name: Build and Push Docker Image
        run: |
          # Sanitize the new version by replacing spaces with underscores
          SANITIZED_NEW_VERSION="${{ github.event.inputs.new_version }}"
          SANITIZED_NEW_VERSION="${SANITIZED_NEW_VERSION// /_}"  # Replace spaces with underscores

          if [ "$BRANCH_NAME" == "main" ]; then
            IMAGE_TAG="cgfm/internxt-cli_rclone:latest"
          else
            IMAGE_TAG="cgfm/internxt-cli_rclone:$BRANCH_NAME"
          fi
          
          echo "Building Docker image with tag: $IMAGE_TAG"

          # Build the Docker image
          docker build -t $IMAGE_TAG .

          # Push the image with the main tag
          docker push $IMAGE_TAG

          # If new version is provided, tag with the new version as well
          if [ -n "$SANITIZED_NEW_VERSION" ]; then
            NEW_IMAGE_TAG="cgfm/internxt-cli_rclone:$SANITIZED_NEW_VERSION"
            echo "Tagging image with new version: $NEW_IMAGE_TAG"
            docker tag $IMAGE_TAG $NEW_IMAGE_TAG
            docker push $NEW_IMAGE_TAG
          fi

      - name: Logout from Docker Hub
        run: docker logout
